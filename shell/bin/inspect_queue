#!/usr/bin/env python

import json
import boto3
import argparse

# Set up argument parsing
parser = argparse.ArgumentParser(description="Inspect messages in an SQS queue.")
parser.add_argument("queue_name", help="The name of the SQS queue to inspect.")
parser.add_argument(
    "-n",
    "--num-messages",
    type=int,
    default=10,
    help="The number of messages to fetch from the queue (default: 10).",
)

args = parser.parse_args()

queue_name = args.queue_name
num_messages = args.num_messages

if not 1 <= num_messages <= 10:
    print("Error: num-messages must be between 1 and 10.")
    exit(1)

# Initialize SQS client
sqs = boto3.client("sqs")

# Get the queue URL
try:
    response = sqs.get_queue_url(QueueName=queue_name)
    queue_url = response["QueueUrl"]
except sqs.exceptions.QueueDoesNotExist:
    print(f"Error: Queue '{queue_name}' does not exist.")
    exit(1)

# Receive messages from SQS queue
response = sqs.receive_message(
    QueueUrl=queue_url,
    MaxNumberOfMessages=num_messages,
    WaitTimeSeconds=5,
    VisibilityTimeout=10,  # seconds
    AttributeNames=["All"],
)

messages = response.get("Messages", [])
if not messages:
    print(f"No messages found in queue '{queue_name}'.")
else:
    for i, message in enumerate(messages, start=1):
        print(f"Message {i}:\n{json.dumps(message, indent=4, default=str)}")
